{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Apache NiFi Cluster",
    "Parameters": {
        "KeyName": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "MinLength": "1",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ClusterSize": {
            "Default": "3",
            "Description": "Number of nodes in the Apache NiFi cluster (1-5).",
            "MaxValue": "5",
            "MinValue": "3",
            "Type": "Number"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Must be a valid EC2 HVM instance type.",
            "Default": "t2.micro",
            "Description": "EC2 HVM instance type (t2.micro, m3.medium, etc).",
            "Type": "String"
        },
        "DiskSize": {
            "Default": "20",
            "Description": "Size of ephemeral storage volume in GiB",
            "MaxValue": "128",
            "MinValue": "20",
            "Type": "Number"
        },
        "DiskType": {
            "AllowedValues": [
                "standard",
                "gp2"
            ],
            "Default": "standard",
            "Description": "Ephemeral storage volume type",
            "Type": "String"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Amazon EC2 Properties"
                    },
                    "Parameters": [
                        "KeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "Apache NiFi Properties"
                    },
                    "Parameters": [
                        "InstanceType",
                        "DiskSize",
                        "DiskType"
                    ]
                },
                {
                    "Label": {
                        "default": "Cluster Size"
                    },
                    "Parameters": [
                        "ClusterSize"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyName": {
                    "default": "Which SSH key to use?"
                },
                "ClusterSize": {
                    "default": "Number of Apache NiFi nodes?"
                },
                "InstanceType": {
                    "default": "Apache Nifi nodes instance type?"
                },
                "DiskSize": {
                    "default": "Nodes ephemeral storage volume size?"
                },
                "DiskType": {
                    "default": "Nodes ephemeral storage volume type?"
                }
            }
        }
    },
    "Mappings": {
        "AWSInstanceType2Arch": {
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "t2.large": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AMI": {
            "ap-northeast-1": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-northeast-2": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-south-1": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-southeast-1": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "ap-southeast-2": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "eu-central-1": {
                "HVM64": "ami-e68f82fb",
                "HVMG2": "NOT_SUPPORTED"
            },
            "eu-west-1": {
                "HVM64": "ami-33734044",
                "HVMG2": "NOT_SUPPORTED"
            },
            "sa-east-1": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "us-east-1": {
                "HVM64": "ami-61bbf104",
                "HVMG2": "NOT_SUPPORTED"
            },
            "us-east-2": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "us-west-1": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            },
            "us-west-2": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED"
            }
        },
        "ClusterSize": {
            "3": {
                "MasterSize": 1,
                "MinionSize": 2
            },
            "4": {
                "MasterSize": 1,
                "MinionSize": 3
            },
            "5": {
                "MasterSize": 1,
                "MinionSize": 4
            }
        }
    },
    "Resources": {
        "NifiNodeLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "configure-ec2-instance": [
                            "configure-extra-volume",
                            "install-cfn",
                            "configure-hostname",
                            "configure-selinux",
                            "disable-swap",
                            "increase-number-of-tcp-socket-ports-available",
                            "configure-security-limits",
                            "configure-how-long-sockets-stay-in-timed-wait-state-when-closed"
                        ],
                        "setup-tools": [
                            "install-pip",
                            "install-awscli"
                        ],
                        "saltstack-install": [
                            "add-saltstack-repo",
                            "install-salt-master",
                            "install-salt-minion"
                        ],
                        "saltstack-configure": [
                            "configure-grains",
                            "accept-salt-keys",
                            "sync-salt-data",
                            "run-highstate"
                        ]
                    },
                    "configure-extra-volume": {
                        "commands": {
                            "01_create_label": {
                                "command": "parted -a optimal /dev/xvdb mklabel msdos"
                            },
                            "02_create_partition": {
                                "command": "parted -a optimal /dev/xvdb mkpart primary 0% 100%"
                            },
                            "03_format_partition": {
                                "command": "mkfs.ext3 -b 4096 -m 1 /dev/xvdb1"
                            },
                            "04_update_fstab": {
                                "command": "echo '/dev/xvdb1    /mnt/data01    ext3    defaults    1 2' >> /etc/fstab"
                            },
                            "05_create_mountpoint_directory": {
                                "command": "mkdir -p /mnt/data01"
                            },
                            "06_mount_volume": {
                                "command": "mount -a"
                            }
                        }
                    },
                    "install-cfn": {
                        "files": {
                            "/etc/systemd/system/cfn-hup.service": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[Unit]\n",
                                            "Description=Cloud formation helper daemon\n\n",
                                            "[Service]\n",
                                            "ExecStart=/usr/bin/cfn-hup\n",
                                            "Restart=always\n",
                                            "RestartSec=10s\n",
                                            "Type=simple\n",
                                            "TimeoutStartSec=120\n",
                                            "TimeoutStopSec=15\n\n",
                                            "[Install]\n",
                                            "WantedBy=multi-user.target"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.MasterMinion.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/usr/bin/cfn-init -v ",
                                            "--stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            " ",
                                            "--resource MasterMinion ",
                                            "--configsets setup-tools,saltstack-install,saltstack-configure ",
                                            "--region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "configure-hostname": {
                        "files": {
                            "/etc/cloud/cloud.cfg.d/99_hostname.cfg": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "preserve_hostname: true",
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    },
                    "configure-selinux": {
                        "commands": {
                            "01_configuration_file_01": {
                                "command": "sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/sysconfig/selinux"
                            },
                            "02_configuration_file_02": {
                                "command": "sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config"
                            },
                            "03_set_permissive": {
                                "command": "setenforce 0"
                            }
                        }
                    },
                    "configure-security-limits": {
                        "commands": {
                            "01_set_maximum_file_handles_hard": {
                                "command": "echo '*  hard  nofile  50000' > /etc/security/limits.d/10-nofile.conf"
                            },
                            "02_set_maximum_file_handles_soft": {
                                "command": "echo '*  soft  nofile  50000' >> /etc/security/limits.d/10-nofile.conf"
                            },
                            "03_set_maximum_forked_processes_hard": {
                                "command": "echo '*  hard  nproc  10000' > /etc/security/limits.d/10-nproc.conf"
                            },
                            "04_set_maximum_forked_processes_hard": {
                                "command": "echo '*  soft  nproc  50000' >> /etc/security/limits.d/10-nproc.conf"
                            }
                        }
                    },
                    "increase-number-of-tcp-socket-ports-available": {
                        "commands": {
                            "01_increase_number_of_tcp_socket_ports_available": {
                                "command": "sysctl -w net.ipv4.ip_local_port_range=\"10000 65000\""
                            }
                        }
                    },
                    "configure-how-long-sockets-stay-in-timed-wait-state-when-closed": {
                        "commands": {
                            "01_configure_how_long_sockets_stay_in_timed_waiit_state_when_closed": {
                                "command": "sysctl -w net.ipv4.netfilter.ip_conntrack_tcp_timeout_time_wait=\"1\""
                            }
                        }
                    },
                    "disable-swap": {
                        "commands": {
                            "01_fix_tuned_virtual_guest_profile": {
                                "command": "sed -i 's/vm.swappiness = 30/vm.swappiness = 0/g' /usr/lib/tuned/virtual-guest/tuned.conf"
                            },
                            "02_set_swappiness": {
                                "command": "sysctl vm.swappiness=0"
                            }
                        }
                    },
                    "add-saltstack-repo": {
                        "files": {
                            "/etc/yum.repos.d/saltstack.repo": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[saltstack-repo]\n",
                                            "name=SaltStack repo for RHEL/CentOS $releasever\n",
                                            "baseurl=https://repo.saltstack.com/yum/redhat/$releasever/$basearch/latest\n",
                                            "enabled=1\n",
                                            "gpgcheck=1\n",
                                            "gpgkey=https://repo.saltstack.com/yum/redhat/$releasever/$basearch/latest/SALTSTACK-GPG-KEY.pub\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "update": {
                                "command": "yum -y update"
                            }
                        }
                    },
                    "install-salt-master": {
                        "packages": {
                            "yum": {
                                "salt-master": []
                            }
                        },
                        "files": {
                            "/etc/salt/master.d/10_master.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "interface: 0.0.0.0\n",
                                            "state_output: mixed\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/salt/master.d/10_node_groups.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "nodegroups:\n",
                                            "  nifinodes: 'G@roles:nifinode*'\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_autostart": {
                                "command": "systemctl enable salt-master.service"
                            },
                            "02_start": {
                                "command": "systemctl start salt-master.service"
                            }
                        }
                    },
                    "install-salt-minion": {
                        "packages": {
                            "yum": {
                                "salt-minion": []
                            }
                        },
                        "files": {
                            "/etc/salt/minion.d/10_minion.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "master:\n",
                                            "  ",
                                            {
                                                "Ref": "SaltMaster"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/salt/minion.d/10_mine.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "mine_interval: 15\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_autostart": {
                                "command": "systemctl enable salt-minion.service"
                            },
                            "02_start": {
                                "command": "systemctl start salt-minion.service"
                            }
                        }
                    },
                    "install-pip": {
                        "commands": {
                            "01_download": {
                                "command": "curl -o /tmp/get-pip.py -O https://bootstrap.pypa.io/get-pip.py"
                            },
                            "02_install": {
                                "command": "python /tmp/get-pip.py"
                            }
                        }
                    },
                    "install-awscli": {
                        "commands": {
                            "01_install": {
                                "command": "pip install awscli"
                            }
                        }
                    },
                    "accept-salt-keys": {
                        "commands": {
                            "01_sleep": {
                                "command": "sleep 15"
                            },
                            "02_accept_all_keys": {
                                "command": "salt-key -A -y"
                            },
                            "03_sleep": {
                                "command": "sleep 15"
                            }
                        }
                    },
                    "sync-salt-data": {
                        "commands": {
                            "01_download_salt": {
                                "command": "aws s3 sync s3://ggc-cloudformation/cloudera/salt/ /srv/salt/ --region eu-central-1"
                            },
                            "02_download_pillar": {
                                "command": "aws s3 sync s3://ggc-cloudformation/cloudera/pillar/ /srv/pillar/ --region eu-central-1"
                            },
                            "03_sync_all": {
                                "command": "salt '*' saltutil.sync_all"
                            },
                            "04_force_sync_mine": {
                                "command": "salt '*' saltutil.refresh_pillar"
                            },
                            "05_force_sync_mine": {
                                "command": "salt '*' mine.update"
                            }
                        }
                    },
                    "run-highstate": {
                        "commands": {
                            "01_run_highstate": {
                                "command": "salt '*' state.highstate"
                            }
                        }
                    },
                    "configure-grains": {
                        "files": {
                            "/etc/salt/grains": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "roles:\n",
                                            "  - nifinode\n"
                                        ]
                                    ]
                                },
                                "mode": "00644",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AssociatePublicIpAddress": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdb",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "DiskSize"
                            },
                            "VolumeType": {
                                "Ref": "DiskType"
                            }
                        }
                    }
                ],
                "ClassicLinkVPCId": "String",
                "ClassicLinkVPCSecurityGroups": [
                    "String"
                ],
                "EbsOptimized": true,
                "IamInstanceProfile": "String",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref": "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    "SecurityGroup"
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum install -y epel-release\n",
                                "yum update -y\n",
                                "yum install -y python-daemon pystache python-setuptools\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "/usr/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource NifiNodeLaunchConfiguration ",
                                "         --configsets configure-ec2-instance,setup-tools,saltstack-install,saltstack-configure ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/usr/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource NifiNodeLaunchConfiguration ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        }
    }
}